{
  "name": "hapi-cache-buster",
  "version": "0.4.0",
  "description": "Hapi plugin to a bust the cache of browser assets.",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/poeticninja/hapi-cache-buster"
  },
  "scripts": {
    "test": "./node_modules/lab/bin/lab"
  },
  "keywords": [
    "hapi",
    "cache",
    "plugin",
    "view",
    "templates",
    "assets"
  ],
  "author": {
    "name": "Saul Maddox"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/poeticninja/hapi-cache-buster/issues"
  },
  "dependencies": {
    "path": "~0.4.x"
  },
  "devDependencies": {
    "cheerio": "~0.19.0",
    "code": "~1.4.0",
    "hapi": "~8.4.0",
    "lab": "~5.5.1",
    "swig": "~1.4.2"
  },
  "readme": "Hapi Cache Buster\n=================\n\nA Hapi cache buster for assets (css, javascript, images, etc) in your view templates.\n\n## Goal:\nHave the client/browser reload new assets when there is a new version.\n\n## How it works:\nIt grabs the package.json version number of your application from the node process current working directory and uses that as the cache version. In your view template you can now access `version.cache`. You can place it where you are needing to update cache.\n\nLets say your package.json is version `0.0.1`, it will print out `?v=001`. To bust the cache you just update your package.json version to a new number.\n\n\nHandlebars:\n`<link rel=\"stylesheet\" href=\"css/styles.css{{version.cache}}\">`\n\nJade:\n`link(rel='stylesheet', href='css/styles.css#{version.cache}')`\n\n### Options\nInstead of using the package.json version for the cache version, you can specify a number and pass it into the plugin options.\n\n```\n{\n  register: require('hapi-cache-buster'),\n  options: {\n    version: 55\n  }\n}\n```\n\n\n### Other\nYou can see this being used in the Hapi Ninja boilerplate example. [https://github.com/poeticninja/hapi-ninja](https://github.com/poeticninja/hapi-ninja)\n\n### Troubleshooting\nIf for some reason you are getting an error because its unable to find the package.json you can actually pass in the package.json version manually `require('./package.json').version`. This is useful if your current process working directory `process.cwd()` is different from the actual application.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/poeticninja/hapi-cache-buster",
  "_id": "hapi-cache-buster@0.4.0",
  "dist": {
    "shasum": "9054351921dac357cc6ecb5772d2af264adf8aed"
  },
  "_from": "hapi-cache-buster@~0.4.0",
  "_resolved": "http://npm.corp.coupons.com:4873/hapi-cache-buster/-/hapi-cache-buster-0.4.0.tgz"
}
